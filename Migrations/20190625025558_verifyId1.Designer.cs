// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vegaApp.models;

namespace vegaApp.Migrations
{
    [DbContext(typeof(VegaContext))]
    [Migration("20190625025558_verifyId1")]
    partial class verifyId1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("vegaApp.models.Feature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Feature1"
                        },
                        new
                        {
                            id = 2,
                            name = "Feature2"
                        },
                        new
                        {
                            id = 3,
                            name = "Feature3"
                        });
                });

            modelBuilder.Entity("vegaApp.models.Make", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Make1"
                        },
                        new
                        {
                            id = 2,
                            name = "Make2"
                        },
                        new
                        {
                            id = 3,
                            name = "Make3"
                        });
                });

            modelBuilder.Entity("vegaApp.models.Model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("makeId");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.HasIndex("makeId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            id = 1,
                            makeId = 3,
                            name = "Model1"
                        },
                        new
                        {
                            id = 2,
                            makeId = 2,
                            name = "Model2"
                        },
                        new
                        {
                            id = 3,
                            makeId = 1,
                            name = "Model3"
                        });
                });

            modelBuilder.Entity("vegaApp.models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactEmail")
                        .HasMaxLength(255);

                    b.Property<string>("contactName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("contactPhone")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("isRegistered");

                    b.Property<int>("modelId");

                    b.Property<DateTime>("updateDate");

                    b.HasKey("Id");

                    b.HasIndex("modelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("vegaApp.models.VehicleFeature", b =>
                {
                    b.Property<int>("VheicleId");

                    b.Property<int>("FeatureId");

                    b.Property<int?>("VehicleId");

                    b.HasKey("VheicleId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleFeatures");
                });

            modelBuilder.Entity("vegaApp.models.Model", b =>
                {
                    b.HasOne("vegaApp.models.Make", "make")
                        .WithMany("models")
                        .HasForeignKey("makeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vegaApp.models.Vehicle", b =>
                {
                    b.HasOne("vegaApp.models.Model", "model")
                        .WithMany()
                        .HasForeignKey("modelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vegaApp.models.VehicleFeature", b =>
                {
                    b.HasOne("vegaApp.models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vegaApp.models.Vehicle", "Vehicle")
                        .WithMany("Features")
                        .HasForeignKey("VehicleId");
                });
#pragma warning restore 612, 618
        }
    }
}
